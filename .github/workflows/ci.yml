name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      with:
        fetch-depth: 1
    - name: Build
      run: |
        cmake -E make_directory build/x64
        cmake -E make_directory build/Win32
        cd build/x64
        cmake -A x64 ../../
        cmake --build . --config RelWithDebInfo
        cd ../../build/Win32
        cmake -A Win32 ../../
        cmake --build . --config RelWithDebInfo
    - name: Copy to dist
      run: |
        cmake -E make_directory dist
        cmake -E copy build/x64/RelWithDebInfo/rcedit.exe dist/rcedit-x64.exe 
        cmake -E copy build/Win32/RelWithDebInfo/rcedit.exe dist/rcedit-x86.exe 
    - name: Print help
      shell: bash
      run: |
        set -eo pipefail
        dist/rcedit-x86.exe -h
        dist/rcedit-x64.exe -h
    - name: Upload artifacts
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: dist
        path: dist/

  release:
    name: Release
    runs-on: windows-2022
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: dist
          path: dist/
      - run: npm install -g semantic-release@22.0.6 semantic-release-export-data@v1.0.1
      - run: npx semantic-release@22.0.6 --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Stamp version
        if: steps.get-next-version.outputs.new-release-published == 'true'
        shell: bash
        run: |
          set -eo pipefail
          dist/rcedit-x64.exe dist/rcedit-x86.exe --set-product-version $VERSION --set-file-version $VERSION
          dist/rcedit-x86.exe -h | grep -q "Rcedit v$VERSION"
          dist/rcedit-x86.exe dist/rcedit-x64.exe --set-product-version $VERSION --set-file-version $VERSION
          dist/rcedit-x64.exe -h | grep -q "Rcedit v$VERSION"
        env:
          VERSION: ${{ steps.get-next-version.outputs.new-release-version }}
      - name: Run semantic release
        run: npx semantic-release@22.0.6
        if: steps.get-next-version.outputs.new-release-published == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
